# name: Continuous deployment

# on:
#   push:
#     branches:
#       - master
#   workflow_dispatch:

# jobs:
#   detect-changes:
#     name: Detect relevant file changes
#     runs-on: ubuntu-latest
#     outputs:
#       any: ${{ steps.changes.outputs.any }}
#       bot: ${{ steps.changes.outputs.bot }}
#     steps:
#       - uses: actions/checkout@v4
#       - name: Detect changes
#         uses: dorny/paths-filter@v3
#         id: changes
#         with:
#           filters: |
#             any:
#               - "apps/**"
#             bot:
#               - "apps/bot/**"
#   deploy:
#     needs: detect-changes
#     name: "Deploy applications to production"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Bot deployment
#         uses: appleboy/ssh-action@master
#         if: needs.detect-changes.outputs.bot == 'true'
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USERNAME }}
#           key: ${{ secrets.PRIVATE_KEY }}
#           port: 22
#           envs: SECRETS
#           script: |
#             set -e
#             for secret_key in $(echo "$SECRETS" | jq -r 'keys[]'); do
#               if [[ "$secret_key" == "SB_"* || "$secret_key" == "TZ" ]]; then
#                 secret_value=$(echo "$SECRETS" | jq -r --arg key "$secret_key" '.[$key]')
#                 echo "$secret_key=$secret_value" >> ~/serpine-bot/apps/bot/.env
#               fi
#             done
#             cd ~/serpine-bot
#             git pull origin master
#             docker compose up --build --force-recreate --no-deps -d bot
#             docker system prune -f && rm ~/serpine-bot/apps/bot/.env
#         env:
#           SECRETS: ${{ toJson(secrets) }}
